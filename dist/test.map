{"version":3,"sources":["dist/index.js","test.js"],"names":["Object","defineProperty","exports","value","makeMap","str","expectsLowerCase","map","create","list","split","i","length","val","toLowerCase","conditionalComment","isPreTag","tag","isUnaryTag","mustUseProp","type","attr","acceptValue","canBeLeftOpenTag","isHTMLTag","isSVG","isReservedTag","getTagNamespace","noop","a","b","c","no","isPlainTextElement","options","expectHTML","parseHTML","html","stack","isUnaryTag$$1","canBeLeftOpenTag$$1","index","last","lastTag","textEnd","indexOf","comment","test","commentEnd","shouldKeepComment","substring","advance","conditionalEnd","doctypeMatch","match","doctype","endTagMatch","endTag","curIndex","parseEndTag","startTagMatch","parseStartTag","handleStartTag","shouldIgnoreFirstNewline","text","rest","next","slice","startTagOpen","chars","endTagLength","stackedTag","reStackedTag","reCache","RegExp","rest$1","replace","all","warn","n","start","tagName","attrs","end","startTagClose","attribute","push","unarySlash","isNonPhrasingTag","unary","l","Array","args","IS_REGEX_CAPTURING_BROKEN","shouldDecodeNewlines","shouldDecodeNewlinesForHref","name","decodeAttr","lowerCasedTag","pos","lowerCasedTagName","default"],"mappings":"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","file":"test.map","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap(str, expectsLowerCase) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase ? function (val) {\n    return map[val.toLowerCase()];\n  } : function (val) {\n    return map[val];\n  };\n}\n\nvar conditionalComment = /^<!\\[/;\n\nvar isPreTag = function isPreTag(tag) {\n  return tag === 'pre';\n};\n\nvar isUnaryTag = makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' + 'link,meta,param,source,track,wbr');\n\nvar mustUseProp = function mustUseProp(tag, type, attr) {\n  return attr === 'value' && acceptValue(tag) && type !== 'button' || attr === 'selected' && tag === 'option' || attr === 'checked' && tag === 'input' || attr === 'muted' && tag === 'video';\n};\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source');\n\nvar isHTMLTag = makeMap('html,body,base,head,link,meta,style,title,' + 'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template,blockquote,iframe,tfoot');\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap('svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' + 'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' + 'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view', true);\n\nvar isReservedTag = function isReservedTag(tag) {\n  return isHTMLTag(tag) || isSVG(tag);\n};\n\nfunction getTagNamespace(tag) {\n  if (isSVG(tag)) {\n    return 'svg';\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math';\n  }\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop(a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function no(a, b, c) {\n  return false;\n};\n\nvar isPlainTextElement = makeMap('script,style,textarea', true);\n\nvar options = {\n  expectHTML: true,\n  // modules: modules,\n  // directives: directives,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace\n  // staticKeys: genStaticKeys(modules)\n};\n\nfunction parseHTML(html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue;\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue;\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue;\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue;\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue;\n        }\n      }\n\n      var text = void 0,\n          rest = void 0,\n          next = void 0;\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (!endTag.test(rest) && !startTagOpen.test(rest) && !comment.test(rest) && !conditionalComment.test(rest)) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) {\n            break;\n          }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text.replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n          .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return '';\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (\"development\" !== 'production' && !stack.length && options.warn) {\n        options.warn(\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\");\n      }\n      break;\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance(n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag() {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match;\n      }\n    }\n  }\n\n  function handleStartTag(match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') {\n          delete args[3];\n        }\n        if (args[4] === '') {\n          delete args[4];\n        }\n        if (args[5] === '') {\n          delete args[5];\n        }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href' ? options.shouldDecodeNewlinesForHref : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag(tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) {\n      start = index;\n    }\n    if (end == null) {\n      end = index;\n    }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break;\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (\"development\" !== 'production' && (i > pos || !tagName) && options.warn) {\n          options.warn(\"tag <\" + stack[i].tag + \"> has no matching end tag.\");\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\nexports.default = parseHTML;","import parseHtml from './dist'\n\n\nparseHtml('<a></a>')"]}